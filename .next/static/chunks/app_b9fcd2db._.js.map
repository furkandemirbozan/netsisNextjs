{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/furkan.demirbozan/Desktop/Nextjs/nextjs-app/app/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Proxy kullanarak CORS hatalarını önlüyoruz\r\nconst BASE_URL = '/api/v2';\r\n\r\n// Token alma isteği\r\nexport const fetchToken = async (username: string, password: string) => {\r\n  try {\r\n    const formData = new URLSearchParams();\r\n    formData.append('grant_type', 'password');\r\n    formData.append('username', username);\r\n    formData.append('password', password);\r\n    formData.append('branchCode', '0');\r\n    formData.append('dbType', '0');\r\n    formData.append('dbName', 'KENANPL');\r\n    formData.append('dbUser', 'TEMELSET');\r\n    formData.append('dbPassword', '');\r\n\r\n    console.log('Token API isteği yapılıyor:', `${BASE_URL}/token`);\r\n    console.log('Gönderilen form data:', formData.toString());\r\n    \r\n    const response = await axios.post(`${BASE_URL}/token`, formData.toString(), {\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      }\r\n    });\r\n    \r\n    console.log('Token API yanıtı status:', response.status);\r\n    console.log('Token API yanıtı özeti:', {\r\n      access_token: response.data?.access_token ? `${response.data.access_token.substring(0, 20)}...` : undefined,\r\n      token_type: response.data?.token_type,\r\n      expires_in: response.data?.expires_in\r\n    });\r\n    \r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error('Token alınırken hata oluştu:');\r\n    \r\n    if (error.response) {\r\n      // Sunucudan gelen yanıtla ilgili hata\r\n      console.error('Sunucu yanıtı:', error.response.status, error.response.data);\r\n    } else if (error.request) {\r\n      // İstek yapıldı ancak yanıt alınamadı\r\n      console.error('Yanıt alınamadı. İstek:', error.request);\r\n    } else {\r\n      // İstek yapılırken bir hata oluştu\r\n      console.error('İstek hatası:', error.message);\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n};\r\n\r\n// Cari bilgilerini alma isteği\r\nexport const fetchArps = async (token: string) => {\r\n  try {\r\n    console.log('Cari API isteği yapılıyor:', `${BASE_URL}/arps`);\r\n    \r\n    const response = await axios.get(`${BASE_URL}/arps`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    });\r\n    \r\n    console.log('Cari API yanıtı status:', response.status);\r\n    console.log('Cari API yanıtı özeti:', {\r\n      TotalCount: response.data?.TotalCount,\r\n      Limit: response.data?.Limit,\r\n      Offset: response.data?.Offset,\r\n      IsSuccessful: response.data?.IsSuccessful,\r\n      DataLength: response.data?.Data?.length || 0\r\n    });\r\n    \r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error('Cari bilgileri alınırken hata oluştu:');\r\n    \r\n    if (error.response) {\r\n      // Sunucudan gelen yanıtla ilgili hata\r\n      console.error('Sunucu yanıtı:', error.response.status, error.response.data);\r\n    } else if (error.request) {\r\n      // İstek yapıldı ancak yanıt alınamadı\r\n      console.error('Yanıt alınamadı. İstek:', error.request);\r\n    } else {\r\n      // İstek yapılırken bir hata oluştu\r\n      console.error('İstek hatası:', error.message);\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n}; "],"names":[],"mappings":";;;;AAAA;;AAEA,6CAA6C;AAC7C,MAAM,WAAW;AAGV,MAAM,aAAa,OAAO,UAAkB;IACjD,IAAI;QACF,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,cAAc;QAC9B,SAAS,MAAM,CAAC,YAAY;QAC5B,SAAS,MAAM,CAAC,YAAY;QAC5B,SAAS,MAAM,CAAC,cAAc;QAC9B,SAAS,MAAM,CAAC,UAAU;QAC1B,SAAS,MAAM,CAAC,UAAU;QAC1B,SAAS,MAAM,CAAC,UAAU;QAC1B,SAAS,MAAM,CAAC,cAAc;QAE9B,QAAQ,GAAG,CAAC,+BAA+B,GAAG,SAAS,MAAM,CAAC;QAC9D,QAAQ,GAAG,CAAC,yBAAyB,SAAS,QAAQ;QAEtD,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,SAAS,MAAM,CAAC,EAAE,SAAS,QAAQ,IAAI;YAC1E,SAAS;gBACP,gBAAgB;YAClB;QACF;QAEA,QAAQ,GAAG,CAAC,4BAA4B,SAAS,MAAM;QACvD,QAAQ,GAAG,CAAC,2BAA2B;YACrC,cAAc,SAAS,IAAI,EAAE,eAAe,GAAG,SAAS,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG;YAClG,YAAY,SAAS,IAAI,EAAE;YAC3B,YAAY,SAAS,IAAI,EAAE;QAC7B;QAEA,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC;QAEd,IAAI,MAAM,QAAQ,EAAE;YAClB,sCAAsC;YACtC,QAAQ,KAAK,CAAC,kBAAkB,MAAM,QAAQ,CAAC,MAAM,EAAE,MAAM,QAAQ,CAAC,IAAI;QAC5E,OAAO,IAAI,MAAM,OAAO,EAAE;YACxB,sCAAsC;YACtC,QAAQ,KAAK,CAAC,2BAA2B,MAAM,OAAO;QACxD,OAAO;YACL,mCAAmC;YACnC,QAAQ,KAAK,CAAC,iBAAiB,MAAM,OAAO;QAC9C;QAEA,MAAM;IACR;AACF;AAGO,MAAM,YAAY,OAAO;IAC9B,IAAI;QACF,QAAQ,GAAG,CAAC,8BAA8B,GAAG,SAAS,KAAK,CAAC;QAE5D,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,SAAS,KAAK,CAAC,EAAE;YACnD,SAAS;gBACP,iBAAiB,CAAC,OAAO,EAAE,OAAO;YACpC;QACF;QAEA,QAAQ,GAAG,CAAC,2BAA2B,SAAS,MAAM;QACtD,QAAQ,GAAG,CAAC,0BAA0B;YACpC,YAAY,SAAS,IAAI,EAAE;YAC3B,OAAO,SAAS,IAAI,EAAE;YACtB,QAAQ,SAAS,IAAI,EAAE;YACvB,cAAc,SAAS,IAAI,EAAE;YAC7B,YAAY,SAAS,IAAI,EAAE,MAAM,UAAU;QAC7C;QAEA,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC;QAEd,IAAI,MAAM,QAAQ,EAAE;YAClB,sCAAsC;YACtC,QAAQ,KAAK,CAAC,kBAAkB,MAAM,QAAQ,CAAC,MAAM,EAAE,MAAM,QAAQ,CAAC,IAAI;QAC5E,OAAO,IAAI,MAAM,OAAO,EAAE;YACxB,sCAAsC;YACtC,QAAQ,KAAK,CAAC,2BAA2B,MAAM,OAAO;QACxD,OAAO;YACL,mCAAmC;YACnC,QAAQ,KAAK,CAAC,iBAAiB,MAAM,OAAO;QAC9C;QAEA,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/furkan.demirbozan/Desktop/Nextjs/nextjs-app/app/utils/auth.ts"],"sourcesContent":["import { Cookies } from 'next-client-cookies';\r\n\r\nlet cookies: Cookies | null = null;\r\n\r\n// Client cookies'i ayarla\r\nexport const setCookiesClient = (cookiesClient: Cookies) => {\r\n  cookies = cookiesClient;\r\n};\r\n\r\n// Token için kullanılacak key'ler\r\nconst TOKEN_KEY = 'authToken';\r\n\r\n// Cookie ayarları\r\nconst COOKIE_OPTIONS = {\r\n  path: '/',\r\n  maxAge: 7 * 24 * 60 * 60, // 7 gün\r\n  sameSite: 'strict'\r\n};\r\n\r\n// Token'ı kaydet (hem localStorage hem cookie'ye)\r\nexport const saveToken = (token: string) => {\r\n  try {\r\n    // LocalStorage'a kaydet\r\n    localStorage.setItem(TOKEN_KEY, token);\r\n    \r\n    // Cookie'ye kaydet\r\n    document.cookie = `${TOKEN_KEY}=${token}; path=${COOKIE_OPTIONS.path}; max-age=${COOKIE_OPTIONS.maxAge}; samesite=${COOKIE_OPTIONS.sameSite}`;\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('Token kaydedilirken hata:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Token'ı getir (önce localStorage, yoksa cookie'den)\r\nexport const getToken = (): string | null => {\r\n  try {\r\n    // Önce localStorage'dan dene\r\n    const localToken = localStorage.getItem(TOKEN_KEY);\r\n    if (localToken) return localToken;\r\n\r\n    // localStorage'da yoksa cookie'den dene\r\n    const cookies = document.cookie.split(';');\r\n    const tokenCookie = cookies.find(c => c.trim().startsWith(`${TOKEN_KEY}=`));\r\n    if (tokenCookie) {\r\n      return tokenCookie.split('=')[1];\r\n    }\r\n\r\n    return null;\r\n  } catch (error) {\r\n    console.error('Token alınırken hata:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Token'ı sil (hem localStorage hem cookie'den)\r\nexport const removeToken = () => {\r\n  try {\r\n    // LocalStorage'dan sil\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    \r\n    // Cookie'den sil\r\n    document.cookie = `${TOKEN_KEY}=; path=${COOKIE_OPTIONS.path}; expires=Thu, 01 Jan 1970 00:00:00 GMT`;\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('Token silinirken hata:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Token var mı kontrol et\r\nexport const isAuthenticated = (): boolean => {\r\n  return !!getToken();\r\n}; "],"names":[],"mappings":";;;;;;;AAEA,IAAI,UAA0B;AAGvB,MAAM,mBAAmB,CAAC;IAC/B,UAAU;AACZ;AAEA,kCAAkC;AAClC,MAAM,YAAY;AAElB,kBAAkB;AAClB,MAAM,iBAAiB;IACrB,MAAM;IACN,QAAQ,IAAI,KAAK,KAAK;IACtB,UAAU;AACZ;AAGO,MAAM,YAAY,CAAC;IACxB,IAAI;QACF,wBAAwB;QACxB,aAAa,OAAO,CAAC,WAAW;QAEhC,mBAAmB;QACnB,SAAS,MAAM,GAAG,GAAG,UAAU,CAAC,EAAE,MAAM,OAAO,EAAE,eAAe,IAAI,CAAC,UAAU,EAAE,eAAe,MAAM,CAAC,WAAW,EAAE,eAAe,QAAQ,EAAE;QAE7I,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO;IACT;AACF;AAGO,MAAM,WAAW;IACtB,IAAI;QACF,6BAA6B;QAC7B,MAAM,aAAa,aAAa,OAAO,CAAC;QACxC,IAAI,YAAY,OAAO;QAEvB,wCAAwC;QACxC,MAAM,UAAU,SAAS,MAAM,CAAC,KAAK,CAAC;QACtC,MAAM,cAAc,QAAQ,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,GAAG,UAAU,CAAC,GAAG,UAAU,CAAC,CAAC;QACzE,IAAI,aAAa;YACf,OAAO,YAAY,KAAK,CAAC,IAAI,CAAC,EAAE;QAClC;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO;IACT;AACF;AAGO,MAAM,cAAc;IACzB,IAAI;QACF,uBAAuB;QACvB,aAAa,UAAU,CAAC;QAExB,iBAAiB;QACjB,SAAS,MAAM,GAAG,GAAG,UAAU,QAAQ,EAAE,eAAe,IAAI,CAAC,uCAAuC,CAAC;QAErG,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO;IACT;AACF;AAGO,MAAM,kBAAkB;IAC7B,OAAO,CAAC,CAAC;AACX","debugId":null}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/furkan.demirbozan/Desktop/Nextjs/nextjs-app/app/login/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useForm } from 'react-hook-form';\r\nimport { fetchToken } from '../services/api';\r\nimport { saveToken } from '../utils/auth';\r\n\r\ninterface LoginForm {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport default function LoginPage() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const router = useRouter();\r\n  const { register, handleSubmit, formState: { errors } } = useForm<LoginForm>({\r\n    defaultValues: {\r\n      username: 'Furkan',\r\n      password: 'Fd123456'\r\n    }\r\n  });\r\n\r\n  const handleNavigation = () => {\r\n    // Önce window.location.href ile yönlendirmeyi dene\r\n    window.location.href = '/dashboard';\r\n  };\r\n\r\n  const onSubmit = async (data: LoginForm) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      \r\n      console.log('Login isteği gönderiliyor:', data);\r\n      \r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('grant_type', 'password');\r\n        formData.append('username', data.username);\r\n        formData.append('password', data.password);\r\n        formData.append('branchCode', '0');\r\n        formData.append('dbType', '0');\r\n        formData.append('dbName', 'KENANPL');\r\n        formData.append('dbUser', 'TEMELSET');\r\n        formData.append('dbPassword', '');\r\n        \r\n        console.log('Form data oluşturuldu');\r\n        console.log('Yerel API URL:', '/api/token');\r\n  \r\n        const localResponse = await fetch('/api/token', {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n  \r\n        if (localResponse.ok) {\r\n          const localData = await localResponse.json();\r\n          console.log('Yerel API yanıtı:', localData);\r\n          \r\n          if (localData && localData.access_token) {\r\n            console.log('Token alındı:', localData.access_token);\r\n            \r\n            // Token'ı kaydet ve yönlendirmeyi başlat\r\n            if (saveToken(localData.access_token)) {\r\n              console.log('Token başarıyla kaydedildi, yönlendirme başlatılıyor...');\r\n              handleNavigation();\r\n            } else {\r\n              setError('Token kaydedilemedi. Lütfen tekrar deneyin.');\r\n            }\r\n            return;\r\n          }\r\n        } else {\r\n          console.log('Yerel API yanıtı başarısız:', localResponse.status, await localResponse.text());\r\n        }\r\n      } catch (localErr) {\r\n        console.error('Yerel API hatası:', localErr);\r\n      }\r\n\r\n      console.log('Normal servis üzerinden token isteği yapılıyor...');\r\n      const response = await fetchToken(data.username, data.password);\r\n      \r\n      console.log('Normal API yanıtı:', response);\r\n      \r\n      if (response && response.access_token) {\r\n        console.log('Token alındı:', response.access_token);\r\n        if (saveToken(response.access_token)) {\r\n          console.log('Token başarıyla kaydedildi, yönlendirme başlatılıyor...');\r\n          handleNavigation();\r\n        } else {\r\n          setError('Token kaydedilemedi. Lütfen tekrar deneyin.');\r\n        }\r\n      } else {\r\n        console.log('Token alınamadı, response:', response);\r\n        setError('Token alınamadı. Lütfen tekrar deneyin.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Login hatası detayı:', err);\r\n      setError('Giriş yapılırken bir hata oluştu. Lütfen kullanıcı adı ve şifrenizi kontrol edin.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen flex-col items-center justify-center bg-gray-100\">\r\n      <div className=\"w-full max-w-md p-8 space-y-8 bg-white rounded-lg shadow-md\">\r\n        <div className=\"text-center\">\r\n          <h1 className=\"text-3xl font-extrabold text-gray-900\">Giriş Yap</h1>\r\n          <p className=\"mt-2 text-sm text-gray-600\">API Entegrasyon Uygulaması</p>\r\n        </div>\r\n        \r\n        {error && (\r\n          <div className=\"p-4 text-sm text-red-700 bg-red-100 rounded-md\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        \r\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"rounded-md shadow-sm -space-y-px\">\r\n            <div className=\"mb-4\">\r\n              <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700\">\r\n                Kullanıcı Adı\r\n              </label>\r\n              <input\r\n                id=\"username\"\r\n                type=\"text\"\r\n                {...register('username', { required: 'Kullanıcı adı gerekli' })}\r\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n              />\r\n              {errors.username && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.username.message}</p>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"mb-4\">\r\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n                Şifre\r\n              </label>\r\n              <input\r\n                id=\"password\"\r\n                type=\"password\"\r\n                {...register('password', { required: 'Şifre gerekli' })}\r\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n              />\r\n              {errors.password && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.password.message}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:bg-indigo-400\"\r\n            >\r\n              {isLoading ? 'Giriş Yapılıyor...' : 'Giriş Yap'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}